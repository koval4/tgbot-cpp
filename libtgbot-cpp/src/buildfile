intf_libs = # Interface dependencies.
impl_libs = # Implementation dependencies.
import intf_libs += libboost-asio%lib{boost_asio}
import intf_libs += libboost-variant%lib{boost_variant}
import intf_libs += libboost-property-tree%lib{boost_property_tree}
import intf_libs += libboost-lexical-cast%lib{boost_lexical_cast}
import impl_libs += libz%lib{z}
import impl_libs += libssl%lib{ssl}

# Public headers.
#
pub = [dir_path] ../include/tgbot/

include $pub

pub_hdrs = $($pub/ pub_hdrs)

lib{tgbot-cpp}: $pub/{$pub_hdrs}

# Private headers and sources as well as dependencies.
#
lib{tgbot-cpp}: {hxx cxx}{**} $impl_libs $intf_libs

# Build options.
#
src_pfx_inc = [dir_path] $src_root/include/
src_pfx_src = [dir_path] $src_root/src/

cxx.poptions =+ "-I$src_pfx_src" "-I$src_pfx_inc"

#obja{*}: cxx.poptions += -DTGBOT_STATIC_BUILD
objs{*}: cxx.poptions += -DTGBOT_DLL

switch $cxx.target.class, $cxx.target.system
{
  case 'windows', 'mingw32'
    cxx.libs += -lws2_32
  case 'windows'
    cxx.libs += ws2_32.lib
  default
    cxx.libs += -pthread
}

# Export options.
#
lib{tgbot-cpp}:
{
  cxx.export.poptions = "-I$src_pfx_inc"
  cxx.export.libs = $intf_libs
}

#liba{tgbot-cpp}: cxx.export.poptions += -DTGBOT_STATIC
#libs{tgbot-cpp}: cxx.export.poptions += -DTGBOT_SHARED

# For pre-releases use the complete version to make sure they cannot
# be used in place of another pre-release or the final version. See
# the version module for details on the version.* variable values.
#
if $version.pre_release
  lib{tgbot-cpp}: bin.lib.version = "-$version.project_id"
else
  lib{tgbot-cpp}: bin.lib.version = "-$version.major.$version.minor"

# Don't install private headers.
#
hxx{*}: install = false
